name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - develop
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 5

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

  build_and_deploy:
    needs: [prepare]
    if: "steps.branch-name.outputs.current_branch == 'develop' || startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest

    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 5

      # - name: Get branch name
      #   id: branch-name
      #   uses: tj-actions/branch-names@v5.2

      - name: Set common ENVs
        env:
          REACT_APP_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          REACT_APP_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          REACT_APP_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          REACT_APP_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          REACT_APP_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        run: echo common ENV-variables have been added

      - name: Set Dev ENVs
        if: steps.branch-name.outputs.current_branch == 'develop'
        env:
          REACT_APP_APP_ID: ${{ secrets.FIREBASE_DEV_APP_ID }}
          REACT_APP_MEASUREMENT_ID: ${{ secrets.FIREBASE_DEV_MEASUREMENT_ID }}
          FIREBASE_HOSTING_TARGET: toptrip-dev
        run: echo "Dev ENV-variables have been added"

      - name: Set Prod ENVs
        if: steps.branch-name.outputs.current_branch == 'main'
        env:
          REACT_APP_APP_ID: ${{ secrets.FIREBASE_PROD_APP_ID }}
          REACT_APP_MEASUREMENT_ID: ${{ secrets.FIREBASE_PROD_MEASUREMENT_ID }}
          FIREBASE_HOSTING_TARGET: toptrip-prod
        run: echo "Prod ENV-variables have been added"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install dependencies
        run: |
          if [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi

      - name: Build
        run: |
          npm run build

      - name: Deploy
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GH_SECRET_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TOP_TRIP_1E5D1 }}"
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          target: "$FIREBASE_HOSTING_TARGET"
