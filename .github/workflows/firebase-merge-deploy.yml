# TODO(Pavel Sokolov): Investigate npm i
name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - develop
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          persist-credentials: false

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

    outputs:
      current_branch: ${{ steps.branch-name.outputs.current_branch }}

  build_and_deploy:
    needs: [prepare]

    if: needs.prepare.outputs.current_branch == 'develop' || startsWith(github.event.head_commit.message, '[RELEASE]')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          persist-credentials: false

      - name: Create .env.production for the dev
        if: needs.prepare.outputs.current_branch == 'develop'
        run: |
          touch .env.production
          echo REACT_APP_API_KEY=${{ secrets.FIREBASE_DEV_API_KEY }} >> .env.production
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.FIREBASE_DEV_AUTH_DOMAIN }} >> .env.production
          echo REACT_APP_PROJECT_ID=${{ secrets.FIREBASE_DEV_PROJECT_ID }} >> .env.production
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.FIREBASE_DEV_STORAGE_BUCKET }} >> .env.production
          echo REACT_APP_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_DEV_MESSAGING_SENDER_ID }} >> .env.production
          echo REACT_APP_APP_ID=${{ secrets.FIREBASE_DEV_APP_ID }} >> .env.production
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.FIREBASE_DEV_MEASUREMENT_ID }} >> .env.production
          cat .env.production

      - name: Create .env.production for the prod
        if: needs.prepare.outputs.current_branch == 'main'
        run: |
          touch .env.production
          echo REACT_APP_API_KEY=${{ secrets.FIREBASE_PROD_API_KEY }} >> .env.production
          echo REACT_APP_AUTH_DOMAIN=${{ secrets.FIREBASE_PROD_AUTH_DOMAIN }} >> .env.production
          echo REACT_APP_PROJECT_ID=${{ secrets.FIREBASE_PROD_PROJECT_ID }} >> .env.production
          echo REACT_APP_STORAGE_BUCKET=${{ secrets.FIREBASE_PROD_STORAGE_BUCKET }} >> .env.production
          echo REACT_APP_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_PROD_MESSAGING_SENDER_ID }} >> .env.production
          echo REACT_APP_APP_ID=${{ secrets.FIREBASE_PROD_APP_ID }} >> .env.production
          echo REACT_APP_MEASUREMENT_ID=${{ secrets.FIREBASE_PROD_MEASUREMENT_ID }} >> .env.production
          cat .env.production

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: npm

      - name: Install dependencies
        run: npm i

      - name: Build
        run: npm run build

      - name: Deploy Dev
        if: needs.prepare.outputs.current_branch == 'develop' || needs.prepare.outputs.current_branch == 'feature/auto-deploy'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_DEV_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_DEV_PROJECT_ID }}
          target: "top-trip-dev"

      - name: Deploy Prod
        if: needs.prepare.outputs.current_branch == 'main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_PROD_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROD_PROJECT_ID }}
          target: "top-trip-prod"
